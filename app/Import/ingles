<?php

namespace App\Import;

use App\Models\Customer;
use App\Models\Bncc;
use App\Tools\Sanitize;
use Exception;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use PhpOffice\PhpSpreadsheet\IOFactory;

set_time_limit(0);
class CustomerImport
{
    protected $bncc;
    protected $sanatize;

    public function __construct(Bncc $bncc, Sanitize $sanatize)
    {
        $this->bncc = $bncc;
        $this->sanatize = $sanatize;
    }

    public function allData(Request $request)
    {
        //insert bncc in the database
        $read = IOFactory::load($request->file);

        $sheetCount = $read->getSheetCount();
        for ($i = 0; $i < $sheetCount; $i++) {
            if ($i == 3) {
                $data = $read->getSheet($i)->toArray();

                $line=0;
                $created=0;

                foreach($data as $item){
                    if($line>2){
                        if ($item[0] != '') {

                            $arraySeries = [$item[1]];
                            $series = [];

                            foreach($arraySeries as $serie) {
                                switch (trim($serie)) {
                                    case '1º':
                                        $serie = 1;
                                        $tipo_bncc = 1;
                                        break;
                                    case '2º':
                                        $serie = 2;
                                        $tipo_bncc = 1;
                                        break;
                                    case '3º':
                                        $serie = 3;
                                        $tipo_bncc = 1;
                                        break;
                                    case '4º':
                                        $serie = 4;
                                        $tipo_bncc = 1;
                                        break;
                                    case '5º':
                                        $serie = 5;
                                        $tipo_bncc = 1;
                                        break;
                                    case '6º':
                                        $serie = 6;
                                        $tipo_bncc = 2;
                                        break;
                                    case '7º':
                                        $serie = 7;
                                        $tipo_bncc = 2;
                                        break;
                                    case '8º':
                                        $serie = 8;
                                        $tipo_bncc = 2;
                                        break;
                                    case '9º':
                                        $serie = 9;
                                        $tipo_bncc = 2;
                                        break;
                                    default:
                                        $serie = null;
                                        $tipo_bncc = 2;
                                        break;
                                }
                                if ($serie != null) {
                                    array_push($series, $serie);
                                }
                            }

                            $series = array_map( function ($serie) {
                                return $serie;
                            }, $series);

                            // dump($item);
                            // dump($series);

                            $bncc = $this->bncc->firstOrCreate([
                                'mapa_turma'                => 1,
                                'tipo_bncc'                 => $tipo_bncc,
                                'disciplina'                => 8,
                                'componente'                => trim($item[0]),
                                'ano_faixa'                 => trim($item[1]),
                                'campos_de_atuacao'         => trim($item[2]),
                                'praticas_de_linguagem'     => trim($item[3]),
                                'objetos_de_conhecimento'   => trim($item[4]),
                                'habilidades'               => trim($item[5]),
                            ]);
                            $bncc->bnccSeries()->sync($series);

                            $created++;
                        }
                    }
                    $line++;
                }
                // dd('oi');
            }
        }
        $notification = [
            'message'=> "worksheet_imported",
            // 'created'=> $created,
        ];
    }
}
